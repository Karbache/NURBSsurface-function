#ifndef OPENSIM_NURBSSURFACE_H_
#define OPENSIM_NURBSSURFACE_H_
/* -------------------------------------------------------------------------- *
 *                              OpenSim:  NURBSsurface.h                        *
 * -------------------------------------------------------------------------- *
 * The OpenSim API is a toolkit for musculoskeletal modeling and simulation.  *
 * See http://opensim.stanford.edu and the NOTICE file for more information.  *
 * OpenSim is developed at Stanford University and supported by the US        *
 * National Institutes of Health (U54 GM072970, R24 HD065690) and by DARPA    *
 * through the Warrior Web program.                                           *
 *                                                                            *
 * Copyright (c) 2005-2017 Stanford University and the Authors                *
 * Author(s): Abdelkader Karbache                                             *
 *                                                                            *
 * Licensed under the Apache License, Version 2.0 (the "License"); you may    *
 * not use this file except in compliance with the License. You may obtain a  *
 * copy of the License at http://www.apache.org/licenses/LICENSE-2.0.         *
 *                                                                            *
 * Unless required by applicable law or agreed to in writing, software        *
 * distributed under the License is distributed on an "AS IS" BASIS,          *
 * WITHOUT WARRANTIES OR CONDITIONS OF ANY KIND, either express or implied.   *
 * See the License for the specific language governing permissions and        *
 * limitations under the License.                                             *
 * -------------------------------------------------------------------------- */


 // INCLUDES
#include <string>
#include "tinynurbs/tinynurbs.h"
#include "glm/glm.hpp"
#include "OpenSim/Common/Function.h"
#include "OpenSim/Common/FunctionAdapter.h"
#include "osimPluginDLL.h"
//#include "check.h"




using namespace OpenSim;
using namespace std;


namespace OpenSim {

	//=============================================================================
	//=============================================================================
	
	/*
	 */
	class OSIMPLUGIN_API NURBSsurface : public Function {
		OpenSim_DECLARE_CONCRETE_OBJECT(NURBSsurface, Function);
	protected:
		//==============================================================================
		// PROPERTIES
		//==============================================================================


		//=============================================================================
		// METHODS
		//=============================================================================
	public:
		//Default construct, copy and assignment
		NURBSsurface() {
			constructProperties();
		}

		// Convenience Constructor
		NURBSsurface() : NURBSsurface()
		{
			tinynurbs::Surface<float> srf;
			srf.degree_u = 3;
			srf.degree_v = 3;
			srf.knots_u = { 0.0,
				0.0,
				0.0,
				0.0,
				0.22754042718121062,
				0.3386332506784358,
				0.4272692268760926,
				0.5254151629024834,
				0.6278042496300891,
				0.7324521957002539,
				0.8244985908494146,
				1.0,
				1.0,
				1.0, 1.0 };
			srf.knots_v = { 0.0,
							0.0,
					     	0.0,
							0.0,
							0.11685473268112237,
							0.18216104332349017,
							0.24418541003464528,
							0.3068330660174462,
							0.3776577429600383,
							0.44500860765357536,
							0.5135385989474971,
							0.5799271434378779,
							0.6538870522936021,
							0.7322033354008859,
							1.0,
							1.0,
							1.0,
							1.0 };
			srf.control_points = { 11, 14, {
				glm::vec3(-29.919231579793852 , 10.065837941813502 , 27.702277751193723),
				glm::vec3(-29.14487314598981 , 10.220955507136111 , 27.854047183987312),
				glm::vec3(-29.239785189419457 , 11.508420108275198 , 27.347453149253866),
				glm::vec3(-30.101319585731428 , 12.752543214570228 , 26.474110374373964),
				glm::vec3(-29.53911368821883 , 12.779102542053398 , 26.674534141014547),
				glm::vec3(-30.771867803763957 , 13.459734059973009 , 25.703644160217472),
				glm::vec3(-29.2512975613827 , 14.99770820434079 , 25.602023419825922),
				glm::vec3(-30.61871396046848 , 15.296256683497418 , 24.346002219481797),
				glm::vec3(-29.998612391784278 , 16.741890732583318 , 23.47649474753453),
				glm::vec3(-30.557397057525126 , 17.011279336335438 , 22.159580142453795),
				glm::vec3(-29.044665517888127 , 17.38752104073964 , 23.784420792277174),
				glm::vec3(-29.78684640449547 , 18.316287120434907 , 21.582404319769864),
				glm::vec3(-29.308606260049423 , 19.218441812011644 , 21.025948546850024),
				glm::vec3(-29.51659154411945 , 19.294078185551896 , 20.47494383953154),
				glm::vec3(-25.11413197835908 , 10.55970054345551 , 28.296651429207586),
				glm::vec3(-25.91703214660053 , 11.216139083737124 , 28.04196105062442),
				glm::vec3(-24.30258724408763 , 12.769875263231121 , 27.648569751997613),
				glm::vec3(-25.601447072688327 , 13.770693891223596 , 27.183920282002635),
				glm::vec3(-25.00494459574401 , 13.908508194576358 , 27.199631284283516),
				glm::vec3(-25.726308790480868 , 15.752846279671894 , 26.312786612817952),
				glm::vec3(-25.94112540019117 , 17.756478938208833 , 25.097541274789325),
				glm::vec3(-24.285536460041776 , 19.96424147992278 , 24.07856098370549),
				glm::vec3(-24.882145816247704 , 20.69123613979655 , 23.375577554483122),
				glm::vec3(-24.296893346677738 , 22.5734926896343 , 21.897508567922184),
				glm::vec3(-25.62529495823067 , 23.777760144423205 , 19.063360695159858),
				glm::vec3(-25.382075048849448 , 24.233398132417552 , 18.506669791980123),
				glm::vec3(-25.097959515189764 , 24.644406540483725 , 18.163306995059546),
				glm::vec3(-25.649257918832127 , 25.059286832144156 , 16.54786189291786),
				glm::vec3(-20.144519778223728 , 11.817585279169144 , 27.70732428389558),
				glm::vec3(-19.163254874892893 , 12.841759771243922 , 27.291102046149536),
				glm::vec3(-20.116628428524194 , 14.254301284177016 , 26.980610940675046),
				glm::vec3(-20.37592820853728 , 17.41639447567666 , 25.839611693239863),
				glm::vec3(-20.443287139391725 , 21.579509556315347 , 23.703772648907),
				glm::vec3(-19.52746685406328 , 22.45970769678007 , 23.17635926036058),
				glm::vec3(-20.56814563963045 , 25.075117650478948 , 20.98620197541044),
				glm::vec3(-20.182020240534868 , 27.780454314688026 , 18.122780328916036),
				glm::vec3(-19.447620150922667 , 29.42179979307923 , 16.31996143320974),
				glm::vec3(-19.948673353354103 , 31.03767983691541 , 13.010771559986297),
				glm::vec3(-20.291218358693808 , 31.474868026489496 , 11.590142839892636),
				glm::vec3(-19.763476658243714 , 32.19079171833462 , 10.643261555625669),
				glm::vec3(-19.79975132637215 , 33.118446180420946 , 8.079375962570431),
				glm::vec3(-19.020906011763078 , 34.14976499942367 , 5.8049380010613705),
				glm::vec3(-14.859911296700298 , 10.316259918887253 , 26.997898141216368),
				glm::vec3(-14.192528826336012 , 12.703680089838493 , 26.27192862819532),
				glm::vec3(-15.164692366175435 , 15.037037482448238 , 25.856436273944738),
				glm::vec3(-14.265535536482838 , 17.885844140513168 , 24.61354298342395),
				glm::vec3(-15.33153341660707 , 20.33588350143197 , 23.838718025057453),
				glm::vec3(-15.571225376298763 , 21.66791334953097 , 23.259691264114352),
				glm::vec3(-15.906727119968286 , 22.388292228858088 , 22.9735942227459),
				glm::vec3(-14.028355945396786 , 25.619607880095657 , 20.723906213641847),
				glm::vec3(-15.546899619030768 , 26.939623807643738 , 19.96753374736996),
				glm::vec3(-15.630114633801497 , 27.353861398300722 , 19.547495873882877),
				glm::vec3(-15.603987639455728 , 30.2063750286194 , 16.54643479274391),
				glm::vec3(-14.519229043752167 , 33.217171521778155 , 12.110023515128995),
				glm::vec3(-15.025151214177825 , 35.32308761225129 , 6.22906441511799),
				glm::vec3(-14.056122789400208 , 36.00750256136291 , 0.8437330580808555),
				glm::vec3(-9.562249702304072 , 10.855005681269594 , 24.838001042850212),
				glm::vec3(-10.880942102104584 , 12.11389178278456 , 25.243517073651407),
				glm::vec3(-10.970904394182753 , 13.924394426708872 , 24.86425987885798),
				glm::vec3(-9.360303124201616 , 15.421272891639873 , 23.796469050124564),
				glm::vec3(-9.76459047632625 , 17.203929973730684 , 23.383828166699804),
				glm::vec3(-9.816217184902397 , 20.435547794451413 , 22.025856653373527),
				glm::vec3(-9.344483065442637 , 22.677190744712956 , 20.649225655644287),
				glm::vec3(-10.314162699257073 , 25.684140408712405 , 19.13572773207655),
				glm::vec3(-9.720841560223075 , 27.396827440653578 , 17.579065889957757),
				glm::vec3(-9.48860495943156 , 29.56051956492717 , 15.708477765654564),
				glm::vec3(-10.529517860216531 , 30.663778724690545 , 15.174592964052659),
				glm::vec3(-9.243975810803322 , 31.742783497106423 , 12.91237758440375),
				glm::vec3(-9.303162644157334 , 33.263350653630894 , 10.178203108480089),
				glm::vec3(-9.131706988671699 , 35.74513557288646 , -1.1592993851293794),
				glm::vec3(-5.547489951224445 , 11.331021070954353 , 22.59701052079053),
				glm::vec3(-5.8980895432150335 , 12.628443733859608 , 22.67601795971528),
				glm::vec3(-4.12839157118623 , 15.68824049525174 , 21.486203484037713),
				glm::vec3(-5.783614326706713 , 17.51146575888291 , 21.60823490056754),
				glm::vec3(-5.684687300281229 , 18.585327400966953 , 21.16554215793356),
				glm::vec3(-5.869188796814781 , 20.01731601728054 , 20.62606785890001),
				glm::vec3(-4.448956762441019 , 22.283616027335256 , 18.875254047009005),
				glm::vec3(-5.55937599837606 , 23.4413366592329 , 18.60203197447485),
				glm::vec3(-4.6686695522115835 , 24.991198200372466 , 17.20478224946093),
				glm::vec3(-5.095338073020424 , 27.62063281214524 , 15.325859249510543),
				glm::vec3(-5.464049932900386 , 30.596990517926198 , 12.578103677152814),
				glm::vec3(-4.501511490894527 , 32.75239285822394 , 9.116276094981375),
				glm::vec3(-5.079159518459586 , 34.936057822369726 , 3.6217523422552094),
				glm::vec3(-4.737490259559839 , 35.454117473882405 , -3.958216115832293),
				glm::vec3(-0.28510084065287017 , 15.070731109077133 , 20.68108348084887),
				glm::vec3(0.4210801112624994 , 16.556686932363164 , 20.23232018870559),
				glm::vec3(0.597313504342971 , 20.887035180531626 , 18.625407512093194),
				glm::vec3(0.2869513793618151 , 22.872205718411347 , 17.521265005369813),
				glm::vec3(0.02989945133409469 , 23.88617578567472 , 16.913721615729422),
				glm::vec3(-0.3932027186256853 , 25.75315727699946 , 15.638237040119602),
				glm::vec3(0.4542804422249222 , 27.745270093336902 , 14.044549795849171),
				glm::vec3(0.42511797633182274 , 29.812698694516126 , 12.024388647179478),
				glm::vec3(0.6983137245208189 , 30.199944538038743 , 11.59581950329421),
				glm::vec3(-0.4378124897805623 , 31.37430343370894 , 10.17739573712963),
				glm::vec3(-0.39149865528445543 , 32.37583808144734 , 8.715563461709142),
				glm::vec3(-0.6561318113857786 , 33.06012228939766 , 7.420846141727114),
				glm::vec3(0.4934247234711308 , 34.55601176163412 , 4.735513553696855),
				glm::vec3(0.16452558500672018 , 35.45093721230525 , -4.775737673963727),
				glm::vec3(5.370112831470748 , 10.600448362029136 , 21.843496082263115),
				glm::vec3(5.112372242763011 , 12.515437952804806 , 21.71706563261268),
				glm::vec3(5.442028551998417 , 15.520671862436947 , 21.30887206535151),
				glm::vec3(5.375063672547759 , 17.83274814497608 , 20.68308510902098),
				glm::vec3(5.2573457289692564 , 20.373828744592497 , 19.720348798485603),
				glm::vec3(5.315578762469207 , 22.739829422200817 , 18.63299459989039),
				glm::vec3(4.872022863791416 , 24.905379125282707 , 17.273553285923697),
				glm::vec3(4.619515206337026 , 26.971525606899405 , 15.782885142522291),
				glm::vec3(4.937688031150366 , 27.38001679070815 , 15.591656502042108),
				glm::vec3(4.720704834152297 , 30.214812926680235 , 13.065690722235148),
				glm::vec3(4.75243928350169 , 32.73165510390297 , 10.181499965928095),
				glm::vec3(5.827988739438847 , 35.29555682347988 , 6.432531130045993),
				glm::vec3(4.592002539590225 , 36.04270344170034 , 2.987889206753814),
				glm::vec3(4.564840661570398 , 36.419777505524394 , -4.851565224886932),
				glm::vec3(9.933259846201105 , 10.301909360578392 , 23.292089321696313),
				glm::vec3(9.67567107598314 , 12.412837335632856 , 23.05502809167888),
				glm::vec3(10.943370357326629 , 15.775580076212773 , 22.857515059908042),
				glm::vec3(9.871885099679924 , 19.601980025288956 , 21.398239018061748),
				glm::vec3(10.840516426446753 , 20.340870322270728 , 21.409550708590356),
				glm::vec3(10.14124479447804 , 21.976116443705358 , 20.48697109037982),
				glm::vec3(9.804073894942508 , 22.611176556268454 , 20.099499568119498),
				glm::vec3(10.29940519007206 , 25.718036381118573 , 18.583266657244423),
				glm::vec3(9.867796129072152 , 27.931823153672347 , 16.955588157470963),
				glm::vec3(9.40132350017045 , 30.046488916781833 , 15.115704208251186),
				glm::vec3(9.939027460970465 , 31.59599510693063 , 13.951896006073266),
				glm::vec3(10.494594097379016 , 33.18411809189129 , 12.625211736368586),
				glm::vec3(10.88086394438411 , 35.0057586022966 , 10.723772944198524),
				glm::vec3(10.315006580623322 , 38.54996604950496 , -4.776191605479504),
				glm::vec3(14.953264153168316 , 10.393297594929624 , 24.57847787314756),
				glm::vec3(14.974801317461807 , 13.162370465463983 , 24.36986383778522),
				glm::vec3(14.605855109903647 , 15.401701952302062 , 23.9414625809582),
				glm::vec3(15.040563092019662 , 17.19556911282686 , 23.631946433825448),
				glm::vec3(14.918626045184958 , 20.147666553864724 , 22.718230750265143),
				glm::vec3(14.791052429960159 , 22.583031887858095 , 21.706907975684015),
				glm::vec3(15.91613074423754 , 25.155592048471835 , 20.794781827929427),
				glm::vec3(15.315172458661767 , 27.3609526680979 , 19.37451734376402),
				glm::vec3(15.674599649088298 , 30.253618210209112 , 17.513949426437918),
				glm::vec3(14.854026400555998 , 32.37588990695085 , 15.534656528779175),
				glm::vec3(14.877840378320322 , 33.36692308817247 , 14.624453298527243),
				glm::vec3(14.14398894399869 , 35.37585180445 , 12.183626733040974),
				glm::vec3(15.160052818109262 , 37.70430278248249 , 9.505508373601238),
				glm::vec3(15.913354360044302 , 40.589885001411076 , -6.1019300516377575),
				glm::vec3(20.16025141527321 , 11.456416160512017 , 25.290048921379917),
				glm::vec3(19.79007216729487 , 13.36951191182615 , 25.07874495632707),
				glm::vec3(20.782156957381698 , 14.596490899059178 , 24.953259511324013),
				glm::vec3(19.900172016830613 , 16.362269684250876 , 24.600006473485642),
				glm::vec3(19.86669700042765 , 20.09967463398372 , 23.54410723317186),
				glm::vec3(19.9960459396628 , 22.63311930919266 , 22.585513884349915),
				glm::vec3(19.02219704894498 , 25.529744653722457 , 21.142368239541568),
				glm::vec3(20.07627348688137 , 27.301184380139485 , 20.220382013019044),
				glm::vec3(19.822266949138037 , 27.79528089136072 , 19.913108155246046),
				glm::vec3(19.975552840014874 , 30.75060578249686 , 17.91131145535003),
				glm::vec3(19.291041361073464 , 32.89559105682032 , 16.142054885353105),
				glm::vec3(20.423717815430788 , 33.983682678827115 , 15.25420990971682),
				glm::vec3(19.600550044383866 , 36.964734432426766 , 12.066873952307407),
				glm::vec3(20.068640784697294 , 40.05344122382266 , 7.370259258209878)


				}

		};
		}
		virtual ~NURBSsurface() {};

		//--------------------------------------------------------------------------
		// EVALUATION
		//--------------------------------------------------------------------------
		double calcValue(const SimTK::Vector& x) const override {
			return (tinynurbs::surfacePoint(srf,glm:vec3(x[0],x[1])));
		}

		double calcDerivative(const std::vector<int>& derivComponents,
			const SimTK::Vector& x) const override {
			int n = (int)derivComponents.size();
			if (n == 0) {
				return calcValue(x);
			}
			if (n > 0) { // Not sure if this is how tinynurbs:surfaceDerivatives works, or if that even is how you call an element of a glm::vec
				int partial = derivComponents[0];
					

				array2<glm::vec<3, T>> derivs = tinynurbs::surfaceDerivatives(srf, n, x[0], x[1]);
				return (derivs(x[0], x[1])[partial]);
			}

			else {
				return 0;
			}
		}

		SimTK::Function* createSimTKFunction() const override {
			return new FunctionAdapter(*this);
		}

		int getArgumentSize() const override { return 4; }
		int getMaxDerivativeOrder() const override { return 3; }

	private:
		void constructProperties() {
		}
		//=============================================================================
	};  // END class NURBSsurface
	//=============================================================================
	//=============================================================================

} // end of namespace OpenSim


#endif  // OPENSIM_NURBSSURFACE_H_


